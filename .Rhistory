library(rio)
lkXLSX="https://github.com/FabianCalla/Avance-2-Trabajo-de-Investigaci-n/blob/main/BDfinal1.xlsx?raw=true"
BDfinal=import(lkXLSX)
modelo1 = lm(PS~ICV+INF+MT, BDfinal)
summary(modelo1)
View(BDfinal)
modelo3= lm(PS~horassemana+negocole+explotacion, BDfinal)
#summary(modelo3)
summary(modelo3)
library(stargazer)
library(jtools)
stargazer(modelo1,modelo2,modelo3, type ="text")
modelo2 = lm(PS~Tasa_alfabetizacion+salario_min+brecha,BDfinal)
summary(modelo2)
library(stargazer)
library(jtools)
stargazer(modelo1,modelo2,modelo3, type ="text")
modelo4= lm(PS~horassemana+negocole+explotacion+Tasa_alfabetizacion+salario_min+brecha+ICV+INF+MT, BDfinal)
summary(modelo4)
dontselect=c("Pais", "PS", "ICV")
select=setdiff(names(BDfinal), dontselect)
DL=BDfinal[,select]
library(polycor)
corL=polycor::hetcor(DL)$correlations
library(ggcorrplot)
ggcorrplot(corL)
library(psych)
psych::KMO(corL)
cortest.bartlett(corL,n=nrow(DL))$p.value>0.05
library(matrixcalc)
is.singular.matrix(corL)
fa.parallel(DL, fa = 'fa',correct = T,plot = F)
library(GPArotation)
resL <- fa(DL,
nfactors = 2,
cor = 'mixed',
rotate = "varimax",
fm="minres")
print(resL$loadings)
print(resL$loadings,cutoff = 0.5)
fa.diagram(resL,main = "Resultados del EFA")
print(resL$loadings,cutoff = 0.5)
sort(resL$communality)
sort(resL$complexity)
library(magrittr)
as.data.frame(resL$scores)%>%head()
dataClus = BDfinal[,c(3:9)]
row.names(dataClus)=BDfinal$Pais
library(cluster)
g.dist = daisy(dataClus, metric="gower")
library(ggplot2)
library(factoextra)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
set.seed(123)
res.pam=pam(g.dist,3,cluster.only = F)
#nueva columna
dataClus$pam=res.pam$cluster
#ver
head(dataClus,15)
fviz_silhouette(res.pam,print.summary = F)
silPAM=data.frame(res.pam$silinfo$widths)
silPAM$country=row.names(silPAM)
poorPAM=silPAM[silPAM$sil_width<0,'country']%>%sort()
poorPAM
aggregate(.~ pam, data=dataClus,mean)
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
BDfinal$kiwi=as.ordered(dataClus$pam)
dataClus$pam=NULL
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
BDfinal$kiwi=as.ordered(dataClus$pam)
aggregate(.~ pam, data=dataClus,mean)
silPAM=data.frame(res.pam$silinfo$widths)
silPAM$country=row.names(silPAM)
poorPAM=silPAM[silPAM$sil_width<0,'country']%>%sort()
poorPAM
aggregate(.~ pam, data=dataClus,mean)
library(rio)
lkXLSX="https://github.com/FabianCalla/Avance-2-Trabajo-de-Investigaci-n/blob/main/BDfinal1.xlsx?raw=true"
BDfinal=import(lkXLSX)
modelo1 = lm(PS~ICV+INF+MT, BDfinal)
summary(modelo1)
modelo2 = lm(PS~Tasa_alfabetizacion+salario_min+brecha,BDfinal)
summary(modelo2)
modelo3= lm(PS~horassemana+negocole+explotacion, BDfinal)
summary(modelo3)
library(stargazer)
library(jtools)
stargazer(modelo1,modelo2,modelo3, type ="text")
modelo4= lm(PS~horassemana+negocole+explotacion+Tasa_alfabetizacion+salario_min+brecha+ICV+INF+MT, BDfinal)
summary(modelo4)
dontselect=c("Pais", "PS", "ICV")
select=setdiff(names(BDfinal), dontselect)
DL=BDfinal[,select]
library(polycor)
corL=polycor::hetcor(DL)$correlations
library(ggcorrplot)
ggcorrplot(corL)
library(psych)
psych::KMO(corL)
cortest.bartlett(corL,n=nrow(DL))$p.value>0.05
library(matrixcalc)
is.singular.matrix(corL)
fa.parallel(DL, fa = 'fa',correct = T,plot = F)
library(GPArotation)
resL <- fa(DL,
nfactors = 2,
cor = 'mixed',
rotate = "varimax",
fm="minres")
print(resL$loadings)
print(resL$loadings,cutoff = 0.5)
fa.diagram(resL,main = "Resultados del EFA")
print(resL$loadings,cutoff = 0.5)
sort(resL$communality)
sort(resL$complexity)
library(magrittr)
as.data.frame(resL$scores)%>%head()
dataClus = BDfinal[,c(3:9)]
row.names(dataClus)=BDfinal$Pais
library(cluster)
g.dist = daisy(dataClus, metric="gower")
library(ggplot2)
library(factoextra)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
set.seed(123)
res.pam=pam(g.dist,3,cluster.only = F)
#nueva columna
dataClus$pam=res.pam$cluster
#ver
head(dataClus,15)
fviz_silhouette(res.pam,print.summary = F)
aggregate(.~ pam, data=dataClus,mean)
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
proyeccion = cmdscale(g.dist, k=2,add = T)
head(proyeccion$points,20)
BDfinal$dim1 <- proyeccion$points[,1]
BDfinal$dim2 <- proyeccion$points[,2]
library(ggrepel)
# solo paises mal clusterizados
PAMlabels=ifelse(BDfinal$kiwipoor,BDfinal$Pais,'')
#base
base= ggplot(BDfinal,aes(x=dim1, y=dim2))  +
scale_color_brewer(type = 'qual',palette ='Dark2'  ) + labs(subtitle = "Se destacan los países mal clusterizados")
pamPlot=base + geom_point(size=3,
aes(color=kiwi))  +
labs(title = "PAM")
# hacer notorios los paises mal clusterizados
pamPlot + geom_text_repel(size=4,
aes(label=PAMlabels),
max.overlaps = 50,
min.segment.length = unit(0, 'lines'))
library(rio)
lkXLSX="https://github.com/FabianCalla/Avance-2-Trabajo-de-Investigaci-n/blob/main/BDfinal1.xlsx?raw=true"
BDfinal=import(lkXLSX)
modelo1 = lm(PS~ICV+INF+MT, BDfinal)
summary(modelo1)
modelo2 = lm(PS~Tasa_alfabetizacion+salario_min+brecha,BDfinal)
summary(modelo2)
modelo3= lm(PS~horassemana+negocole+explotacion, BDfinal)
summary(modelo3)
library(stargazer)
library(jtools)
stargazer(modelo1,modelo2,modelo3, type ="text")
modelo4= lm(PS~horassemana+negocole+explotacion+Tasa_alfabetizacion+salario_min+brecha+ICV+INF+MT, BDfinal)
summary(modelo4)
dontselect=c("Pais", "PS", "ICV")
select=setdiff(names(BDfinal), dontselect)
DL=BDfinal[,select]
library(polycor)
corL=polycor::hetcor(DL)$correlations
library(ggcorrplot)
ggcorrplot(corL)
library(psych)
psych::KMO(corL)
cortest.bartlett(corL,n=nrow(DL))$p.value>0.05
library(matrixcalc)
is.singular.matrix(corL)
fa.parallel(DL, fa = 'fa',correct = T,plot = F)
library(GPArotation)
resL <- fa(DL,
nfactors = 2,
cor = 'mixed',
rotate = "varimax",
fm="minres")
print(resL$loadings)
print(resL$loadings,cutoff = 0.5)
fa.diagram(resL,main = "Resultados del EFA")
print(resL$loadings,cutoff = 0.5)
sort(resL$communality)
sort(resL$complexity)
library(magrittr)
as.data.frame(resL$scores)%>%head()
dataClus = BDfinal[,c(3:9)]
row.names(dataClus)=BDfinal$Pais
library(cluster)
g.dist = daisy(dataClus, metric="gower")
library(ggplot2)
library(factoextra)
fviz_nbclust(dataClus, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
set.seed(123)
res.pam=pam(g.dist,3,cluster.only = F)
#nueva columna
dataClus$pam=res.pam$cluster
#ver
head(dataClus,15)
fviz_silhouette(res.pam,print.summary = F)
silPAM=data.frame(res.pam$silinfo$widths)
silPAM$country=row.names(silPAM)
poorPAM=silPAM[silPAM$sil_width<0,'country']%>%sort()
poorPAM
aggregate(.~ pam, data=dataClus,mean)
BDfinal$kiwipoor=BDfinal$Pais%in%poorPAM
BDfinal$kiwi=as.ordered(dataClus$pam)
dataClus$pam=NULL
proyeccion = cmdscale(g.dist, k=2,add = T)
head(proyeccion$points,20)
BDfinal$dim1 <- proyeccion$points[,1]
BDfinal$dim2 <- proyeccion$points[,2]
library(ggrepel)
# solo paises mal clusterizados
PAMlabels=ifelse(BDfinal$kiwipoor,BDfinal$Pais,'')
#base
base= ggplot(BDfinal,aes(x=dim1, y=dim2))  +
scale_color_brewer(type = 'qual',palette ='Dark2'  ) + labs(subtitle = "Se destacan los países mal clusterizados")
pamPlot=base + geom_point(size=3,
aes(color=kiwi))  +
labs(title = "PAM")
# hacer notorios los paises mal clusterizados
pamPlot + geom_text_repel(size=4,
aes(label=PAMlabels),
max.overlaps = 50,
min.segment.length = unit(0, 'lines'))
#install.packages("cowplot")
#install.packages("googleway")
#install.packages("ggplot2")
#install.packages("ggrepel")
#install.packages("ggspatial")
#install.packages("libwgeom")
#install.packages("sf")
#install.packages("rnaturalearth")
#install.packages("rnaturalearthdata")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
#[1] "sf"
#[1] "data.frame"
ggplot(data = world) +
geom_sf()
ggplot(data = world) +
geom_sf() +
xlab("Longitude") + ylab("Latitude") +
ggtitle("MAPA MUNDIAL", subtitle = paste0("(", length(unique(world$país)), " PAÍS)"))
ggplot(data = world) +
geom_sf(aes(fill = pop_est)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
